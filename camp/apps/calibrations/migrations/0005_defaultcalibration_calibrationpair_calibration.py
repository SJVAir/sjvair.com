# Generated by Django 4.2.14 on 2025-04-30 17:36

import camp.apps.calibrations.utils
import camp.apps.entries.fields
import camp.apps.monitors.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_smalluuid.models
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('monitors', '0033_latestentry_defaultsensor'),
        ('calibrations', '0004_rename_is_active_calibrator_is_enabled'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefaultCalibration',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('monitor_type', camp.apps.monitors.fields.MonitorTypeField(max_length=50)),
                ('entry_type', camp.apps.entries.fields.EntryTypeField(max_length=50)),
                ('calibration', models.CharField(blank=True, default='', max_length=50)),
            ],
            options={
                'unique_together': {('monitor_type', 'entry_type')},
            },
        ),
        migrations.CreateModel(
            name='CalibrationPair',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('entry_type', camp.apps.entries.fields.EntryTypeField(max_length=50)),
                ('is_enabled', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, default='')),
                ('colocated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colocated_pairs', to='monitors.monitor')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_pairs', to='monitors.monitor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('entry_type', camp.apps.entries.fields.EntryTypeField(max_length=50)),
                ('trainer', models.CharField(help_text='The trainer class used to generate this calibration.', max_length=255)),
                ('formula', models.TextField(blank=True, help_text='Formula string, if model can be expressed this way (e.g., for linear regression).', null=True)),
                ('intercept', models.FloatField(blank=True, null=True)),
                ('model_file', models.FileField(blank=True, help_text='Trained model file (.bin, .pt, etc.) if not using a simple formula.', null=True, upload_to=camp.apps.calibrations.utils.calibration_model_upload_to)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('r2', models.FloatField(blank=True, null=True)),
                ('rmse', models.FloatField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
                ('features', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to='calibrations.calibrationpair')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
