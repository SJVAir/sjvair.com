# Generated by Django 2.2.1 on 2019-06-27 21:15

import camp.utils.validators
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import resticus.encoders


class Migration(migrations.Migration):

    dependencies = [
        ('sensors', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='sensordata',
            name='payload',
            field=django.contrib.postgres.fields.jsonb.JSONField(encoder=resticus.encoders.JSONEncoder, validators=[camp.utils.validators.JSONSchemaValidator({'properties': {'barometric_pressure': {'type': 'number'}, 'celcius': {'type': 'number'}, 'humidity': {'type': 'number'}, 'pm2': {'properties': {'a': {'properties': {'particles_03um': {'type': 'number'}, 'particles_05um': {'type': 'number'}, 'particles_100um': {'type': 'number'}, 'particles_10um': {'type': 'number'}, 'particles_25um': {'type': 'number'}, 'particles_50um': {'type': 'number'}, 'pm100_env': {'type': 'number'}, 'pm100_standard': {'type': 'number'}, 'pm10_env': {'type': 'number'}, 'pm10_standard': {'type': 'number'}, 'pm25_env': {'type': 'number'}, 'pm25_standard': {'type': 'number'}}, 'required': ['pm10_standard', 'pm25_standard', 'pm100_standard', 'pm10_env', 'pm25_env', 'pm100_env', 'particles_03um', 'particles_05um', 'particles_10um', 'particles_25um', 'particles_50um', 'particles_100um'], 'type': 'object'}, 'b': {'properties': {'particles_03um': {'type': 'number'}, 'particles_05um': {'type': 'number'}, 'particles_100um': {'type': 'number'}, 'particles_10um': {'type': 'number'}, 'particles_25um': {'type': 'number'}, 'particles_50um': {'type': 'number'}, 'pm100_env': {'type': 'number'}, 'pm100_standard': {'type': 'number'}, 'pm10_env': {'type': 'number'}, 'pm10_standard': {'type': 'number'}, 'pm25_env': {'type': 'number'}, 'pm25_standard': {'type': 'number'}}, 'required': ['pm10_standard', 'pm25_standard', 'pm100_standard', 'pm10_env', 'pm25_env', 'pm100_env', 'particles_03um', 'particles_05um', 'particles_10um', 'particles_25um', 'particles_50um', 'particles_100um'], 'type': 'object'}}, 'required': ['a', 'b'], 'type': 'object'}, 'voc': {'type': 'number'}}, 'required': ['celcius', 'humidity', 'pm2'], 'type': 'object'})]),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='pm2',
            field=django.contrib.postgres.fields.jsonb.JSONField(encoder=resticus.encoders.JSONEncoder, null=True, validators=[camp.utils.validators.JSONSchemaValidator({'properties': {'a': {'properties': {'particles_03um': {'type': 'number'}, 'particles_05um': {'type': 'number'}, 'particles_100um': {'type': 'number'}, 'particles_10um': {'type': 'number'}, 'particles_25um': {'type': 'number'}, 'particles_50um': {'type': 'number'}, 'pm100_env': {'type': 'number'}, 'pm100_standard': {'type': 'number'}, 'pm10_env': {'type': 'number'}, 'pm10_standard': {'type': 'number'}, 'pm25_env': {'type': 'number'}, 'pm25_standard': {'type': 'number'}}, 'required': ['pm10_standard', 'pm25_standard', 'pm100_standard', 'pm10_env', 'pm25_env', 'pm100_env', 'particles_03um', 'particles_05um', 'particles_10um', 'particles_25um', 'particles_50um', 'particles_100um'], 'type': 'object'}, 'b': {'properties': {'particles_03um': {'type': 'number'}, 'particles_05um': {'type': 'number'}, 'particles_100um': {'type': 'number'}, 'particles_10um': {'type': 'number'}, 'particles_25um': {'type': 'number'}, 'particles_50um': {'type': 'number'}, 'pm100_env': {'type': 'number'}, 'pm100_standard': {'type': 'number'}, 'pm10_env': {'type': 'number'}, 'pm10_standard': {'type': 'number'}, 'pm25_env': {'type': 'number'}, 'pm25_standard': {'type': 'number'}}, 'required': ['pm10_standard', 'pm25_standard', 'pm100_standard', 'pm10_env', 'pm25_env', 'pm100_env', 'particles_03um', 'particles_05um', 'particles_10um', 'particles_25um', 'particles_50um', 'particles_100um'], 'type': 'object'}}, 'required': ['a', 'b'], 'type': 'object'})]),
        ),
        migrations.AlterField(
            model_name='sensordata',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='sensors.Sensor'),
        ),
    ]
