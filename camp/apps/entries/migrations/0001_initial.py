# Generated by Django 4.2.14 on 2025-04-20 19:39

import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_smalluuid.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('monitors', '0033_latestentry_defaultsensor'),
    ]

    operations = [
        migrations.CreateModel(
            name='SO2',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='Sulfer dioxide (ppb)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.so2')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pressure',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='Atmospheric pressure (mmHg)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.pressure')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PM25',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('calibration', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('calibration_data', models.JSONField(default=dict)),
                ('calibration_object_id', django_smalluuid.models.SmallUUIDField(db_index=True, editable=False, null=True, unique=True)),
                ('value', models.DecimalField(decimal_places=2, help_text='PM2.5 (µg/m³)', max_digits=6)),
                ('calibration_content_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.pm25')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor', 'calibration'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PM100',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='PM10.0 (µg/m³)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.pm100')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PM10',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='PM1.0 (µg/m³)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.pm10')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Particulates',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('particles_03um', models.DecimalField(decimal_places=2, max_digits=8)),
                ('particles_05um', models.DecimalField(decimal_places=2, max_digits=8)),
                ('particles_10um', models.DecimalField(decimal_places=2, max_digits=8)),
                ('particles_25um', models.DecimalField(decimal_places=2, max_digits=8)),
                ('particles_50um', models.DecimalField(decimal_places=2, max_digits=8)),
                ('particles_100um', models.DecimalField(decimal_places=2, max_digits=8)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.particulates')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='O3',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='Ozone (ppb)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.o3')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NO2',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='Nitrogen dioxide (ppb)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.no2')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Humidity',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('calibration', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('calibration_data', models.JSONField(default=dict)),
                ('calibration_object_id', django_smalluuid.models.SmallUUIDField(db_index=True, editable=False, null=True, unique=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='Relative humidity (%)', max_digits=4)),
                ('calibration_content_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.humidity')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor', 'calibration'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CO',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('value', models.DecimalField(decimal_places=2, help_text='Carbon monoxide (ppm)', max_digits=6)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.co')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('reference', 'Reference-grade'), ('raw', 'Raw'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', max_length=16)),
                ('calibration', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('calibration_data', models.JSONField(default=dict)),
                ('calibration_object_id', django_smalluuid.models.SmallUUIDField(db_index=True, editable=False, null=True, unique=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='Temperature (°F)', max_digits=4)),
                ('calibration_content_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.temperature')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor', 'calibration'),
                'get_latest_by': 'timestamp',
                'abstract': False,
                'indexes': [django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_tem_timesta_1e308e_brin')],
            },
        ),
        migrations.AddConstraint(
            model_name='temperature',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage', 'calibration'), name='unique_calibrated_entry_temperature'),
        ),
        migrations.AddIndex(
            model_name='so2',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_so2_timesta_1b3d23_brin'),
        ),
        migrations.AddConstraint(
            model_name='so2',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_so2'),
        ),
        migrations.AddIndex(
            model_name='pressure',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_pre_timesta_c20a4a_brin'),
        ),
        migrations.AddConstraint(
            model_name='pressure',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_pressure'),
        ),
        migrations.AddIndex(
            model_name='pm25',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_pm2_timesta_5eada9_brin'),
        ),
        migrations.AddConstraint(
            model_name='pm25',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage', 'calibration'), name='unique_calibrated_entry_pm25'),
        ),
        migrations.AddIndex(
            model_name='pm100',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_pm1_timesta_d72793_brin'),
        ),
        migrations.AddConstraint(
            model_name='pm100',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_pm100'),
        ),
        migrations.AddIndex(
            model_name='pm10',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_pm1_timesta_c6efd5_brin'),
        ),
        migrations.AddConstraint(
            model_name='pm10',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_pm10'),
        ),
        migrations.AddIndex(
            model_name='particulates',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_par_timesta_2e5445_brin'),
        ),
        migrations.AddConstraint(
            model_name='particulates',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_particulates'),
        ),
        migrations.AddIndex(
            model_name='o3',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_o3_timesta_564d2c_brin'),
        ),
        migrations.AddConstraint(
            model_name='o3',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_o3'),
        ),
        migrations.AddIndex(
            model_name='no2',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_no2_timesta_a91143_brin'),
        ),
        migrations.AddConstraint(
            model_name='no2',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_no2'),
        ),
        migrations.AddIndex(
            model_name='humidity',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_hum_timesta_29654d_brin'),
        ),
        migrations.AddConstraint(
            model_name='humidity',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage', 'calibration'), name='unique_calibrated_entry_humidity'),
        ),
        migrations.AddIndex(
            model_name='co',
            index=django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_co_timesta_964c9e_brin'),
        ),
        migrations.AddConstraint(
            model_name='co',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage'), name='unique_entry_co'),
        ),
    ]
