# Generated by Django 4.2.14 on 2025-05-14 16:31

import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_smalluuid.models


class Migration(migrations.Migration):

    dependencies = [
        ('calibrations', '0005_defaultcalibration_calibrationpair_calibration'),
        ('monitors', '0033_latestentry_defaultsensor'),
        ('entries', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='particulates',
            name='particles_03um',
            field=models.DecimalField(decimal_places=2, max_digits=8, null=True),
        ),
        migrations.AlterField(
            model_name='particulates',
            name='particles_05um',
            field=models.DecimalField(decimal_places=2, max_digits=8, null=True),
        ),
        migrations.AlterField(
            model_name='particulates',
            name='particles_100um',
            field=models.DecimalField(decimal_places=2, max_digits=8, null=True),
        ),
        migrations.AlterField(
            model_name='particulates',
            name='particles_10um',
            field=models.DecimalField(decimal_places=2, max_digits=8, null=True),
        ),
        migrations.AlterField(
            model_name='particulates',
            name='particles_25um',
            field=models.DecimalField(decimal_places=2, max_digits=8, null=True),
        ),
        migrations.AlterField(
            model_name='particulates',
            name='particles_50um',
            field=models.DecimalField(decimal_places=2, max_digits=8, null=True),
        ),
        migrations.CreateModel(
            name='CO2',
            fields=[
                ('id', django_smalluuid.models.SmallUUIDField(db_index=True, default=django_smalluuid.models.UUIDDefault(), editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('position', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('location', models.CharField(choices=[('inside', 'inside'), ('outside', 'outside')], max_length=10)),
                ('sensor', models.CharField(blank=True, db_index=True, default='', max_length=50)),
                ('stage', models.CharField(choices=[('raw', 'Raw'), ('corrected', 'Corrected'), ('cleaned', 'Cleaned'), ('calibrated', 'Calibrated')], default='raw', help_text='The processing stage for this entry.', max_length=16)),
                ('processor', models.CharField(blank=True, db_index=True, default='', help_text='The processor class used to generate this entry.', max_length=100)),
                ('value', models.DecimalField(decimal_places=2, help_text='Carbon monoxide (ppm)', max_digits=6)),
                ('calibration', models.ForeignKey(blank=True, help_text='The calibration record applied to this entry (if applicable).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_entries', to='calibrations.calibration')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_entries', to='monitors.monitor')),
                ('origin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_entries', to='entries.co2')),
            ],
            options={
                'ordering': ('-timestamp', 'sensor', 'processor'),
                'get_latest_by': 'timestamp',
                'abstract': False,
                'indexes': [django.contrib.postgres.indexes.BrinIndex(autosummarize=True, fields=['timestamp', 'sensor'], name='entries_co2_timesta_b94a18_brin')],
            },
        ),
        migrations.AddConstraint(
            model_name='co2',
            constraint=models.UniqueConstraint(fields=('monitor', 'timestamp', 'sensor', 'stage', 'processor'), name='unique_entry_co2'),
        ),
    ]
