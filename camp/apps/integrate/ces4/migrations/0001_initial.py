# Generated by Django 4.2.20 on 2025-08-07 16:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('regions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tract',
            fields=[
                ('objectid', models.CharField(help_text='Given Tract GEOID and census year', max_length=20, primary_key=True, serialize=False, verbose_name='Tract GEOID + version')),
                ('tract', models.CharField(help_text='Given Tract GEOID', max_length=12, verbose_name='Tract GEOID')),
                ('population', models.IntegerField(help_text='Number of individuals living within the tract', null=True, verbose_name='Tract Population Size')),
                ('ci_score', models.FloatField(help_text='Pollution Score multiplied by Population Characteristics Score', null=True, verbose_name='CalEnviroScreen Score')),
                ('ci_score_p', models.FloatField(null=True, verbose_name='CES Score Percentile')),
                ('pollution', models.FloatField(help_text='Average of percentiles from the Pollution Burden indicators', null=True, verbose_name='Pollution Burden')),
                ('pollution_s', models.FloatField(null=True, verbose_name='Pollution Burden Score')),
                ('pollution_p', models.FloatField(null=True, verbose_name='Pollution Burden Percentile')),
                ('pol_ozone', models.FloatField(help_text='Amount of daily maximum 8 hour Ozone concentration', null=True, verbose_name='Ozone (ppm)')),
                ('pol_ozone_p', models.FloatField(null=True, verbose_name='Ozone Percentile')),
                ('pol_pm', models.FloatField(help_text='Annual mean PM2.5 concentrations', null=True, verbose_name='PM2.5 (µg/m³)')),
                ('pol_pm_p', models.FloatField(null=True, verbose_name='PM2.5 Percentile')),
                ('pol_diesel', models.FloatField(help_text='Diesel PM emissions from on-road and non-road sources', null=True, verbose_name='Diesel PM emissions (tons per year)')),
                ('pol_diesel_p', models.FloatField(null=True, verbose_name='Diesel PM emissions Percentile')),
                ('pol_pest', models.FloatField(help_text='Total pounds of selected active pesticide ingredients', null=True, verbose_name='Pesticides (lb/mi²)')),
                ('pol_pest_p', models.FloatField(null=True, verbose_name='Pesticides Percentile')),
                ('pol_rsei_haz', models.FloatField(help_text='Toxicity-weighted concentrations of modeled chemical releases to air from facility emissions and off-site incineration', null=True, verbose_name='Chemical Release Score')),
                ('pol_rsei_haz_p', models.FloatField(null=True, verbose_name='Chemical Releases Percentile')),
                ('pol_traffic', models.FloatField(help_text='Traffic density in vehicle-kilometers per hour per road length, within 150 meters of the census tract boundary', null=True, verbose_name='Traffic (vehicle-km/hour/km²)')),
                ('pol_traffic_p', models.FloatField(null=True, verbose_name='Traffic Percentile')),
                ('pol_drink', models.FloatField(help_text='Drinking water contaminant index for selected contaminants', null=True, verbose_name='Drinking Water Contaminant Score')),
                ('pol_drink_p', models.FloatField(null=True, verbose_name='Drinking Water Contaminant Percentile')),
                ('pol_haz', models.FloatField(help_text='Sum of weighted hazardous waste facilities and large quantity generators within buffered distances to populated blocks of census tracts', null=True, verbose_name='Hazardous Waste Facilities')),
                ('pol_haz_p', models.FloatField(null=True, verbose_name='Hazardous Waste Facilities Percentile')),
                ('pol_lead', models.FloatField(help_text='Potential risk for lead exposure in children living in low-income communities with older housing', null=True, verbose_name='Lead Exposure Score')),
                ('pol_lead_p', models.FloatField(null=True, verbose_name='Lead Exposure Percentile')),
                ('pol_cleanups', models.FloatField(help_text='Sum of weighted EnviroStor cleanup sites within buffered distances to populated blocks of census tracts', null=True, verbose_name='Cleanup Sites')),
                ('pol_cleanups_p', models.FloatField(null=True, verbose_name='Asthma Emergencies Percentile')),
                ('pol_gwthreats', models.FloatField(help_text='Sum of weighted GeoTracker leaking underground storage tank sites within buffered distances to populated blocks of census tracts', null=True, verbose_name='Ground Water Threats')),
                ('pol_gwthreats_p', models.FloatField(null=True, verbose_name='Ground Water Threats Percentile')),
                ('pol_iwb', models.FloatField(help_text='Sum of number of pollutants across all impaired water bodies within buffered distances to populated blocks of census tracts', null=True, verbose_name='Impaired Water Bodies')),
                ('pol_iwb_p', models.FloatField(null=True, verbose_name='Impaired Water Bodies Percentile')),
                ('pol_swis', models.FloatField(help_text='Sum of weighted and facilities (SWIS) within  buffered distances to populated blocks of census tracts', null=True, verbose_name='Solid Waste Sites')),
                ('pol_swis_p', models.FloatField(null=True, verbose_name='Solid Waste Sites Percentile')),
                ('popchar', models.FloatField(help_text='Average of percentiles from the Population Characteristics indicators', null=True, verbose_name='Population Characteristics')),
                ('popchar_s', models.FloatField(null=True, verbose_name='Population Score')),
                ('popchar_p', models.FloatField(null=True, verbose_name='Population Percentile')),
                ('char_asthma', models.FloatField(help_text='Age-adjusted rate of emergency department visits for asthma', null=True, verbose_name='Asthma Emergencies (per/10,000)')),
                ('char_asthma_p', models.FloatField(null=True, verbose_name='Asthma Emergencies Percentile')),
                ('char_cvd', models.FloatField(help_text='Age-adjusted rate of emergency department visits for heart attacks per 10,000', null=True, verbose_name='Heart Attack Emergencies (per/10,000)')),
                ('char_cvd_p', models.FloatField(null=True, verbose_name='Heart Attack Emergencies Percentile')),
                ('char_lbw', models.FloatField(help_text='Percent of low birth weight', null=True, verbose_name='Low Birth Weight')),
                ('char_lbw_p', models.FloatField(null=True, verbose_name='Low Birth Weight Percentile')),
                ('char_edu', models.FloatField(help_text='Percent of population over 25 with less than a high school education', null=True, verbose_name='Education')),
                ('char_edu_p', models.FloatField(null=True, verbose_name='Education Percentile')),
                ('char_ling', models.FloatField(help_text='Percent of households in a census tract where no one over age 14 speaks English', null=True, verbose_name='Linguistic Isolation')),
                ('char_ling_p', models.FloatField(null=True, verbose_name='Linguistic Isolation Percentile')),
                ('char_pov', models.FloatField(help_text='Percent of population living below two times the federal poverty level', null=True, verbose_name='Poverty')),
                ('char_pov_p', models.FloatField(null=True, verbose_name='Poverty Percentile')),
                ('char_unemp', models.FloatField(help_text='Percent of the population over the age of 16 that is unemployed and eligible for the labor force', null=True, verbose_name='Unemployment')),
                ('char_unemp_p', models.FloatField(null=True, verbose_name='Unemploymentrgencies Percentile')),
                ('char_housingb', models.FloatField(help_text='Percent housing-burdened low-income households', null=True, verbose_name='Low-Income Households')),
                ('char_housingb_p', models.FloatField(null=True, verbose_name='Low-Income Households Percentile')),
                ('pop_10', models.IntegerField(help_text='Number of people per census tract of children under 10 years old', null=True, verbose_name='Age Group 0-10')),
                ('pop_10_p', models.FloatField(null=True, verbose_name='Age Group 0-10 Percentile')),
                ('pop_10_64', models.IntegerField(help_text='Number of people per census tract of people between 10 and 64 years old', null=True, verbose_name='Age Group 10-64')),
                ('pop_10_64_p', models.FloatField(null=True, verbose_name='Age Group 10-64 Percentile')),
                ('pop_65', models.IntegerField(help_text='Number of people per census tract of elderly 65 years and older', null=True, verbose_name='Age Group 65+')),
                ('pop_65_p', models.FloatField(null=True, verbose_name='Age Group 65+ Percentile')),
                ('pop_hispanic', models.IntegerField(help_text='Number of people per census tract of those who identify as Hispanic or Latino', null=True, verbose_name='Hispanic')),
                ('pop_hispanic_p', models.FloatField(null=True, verbose_name='Hispanic Percentile')),
                ('pop_white', models.IntegerField(help_text='Number of people per census tract of those who identify as non-Hispanic white', null=True, verbose_name='White')),
                ('pop_white_p', models.FloatField(null=True, verbose_name='White Percentile')),
                ('pop_black', models.IntegerField(help_text='Number of people per census tract of those who identify as non-Hispanic African American or black', null=True, verbose_name='African American')),
                ('pop_black_p', models.FloatField(null=True, verbose_name='African American Percentile')),
                ('pop_native', models.IntegerField(help_text='Number of people per census tract of those who identify as non-Hispanic Native American', null=True, verbose_name='Native American')),
                ('pop_native_p', models.FloatField(null=True, verbose_name='Native American Percentile')),
                ('pop_asian', models.IntegerField(help_text='Number of people per census tract of those who identify as non-Hispanic Asian or Pacific Islander', null=True, verbose_name='Asian American')),
                ('pop_asian_p', models.FloatField(null=True, verbose_name='Asian American Percentile')),
                ('pop_other', models.IntegerField(help_text='Number of people per census tract of those who identify as non-Hispanic "other" or as multiple races', null=True, verbose_name='Other Ethnicity')),
                ('pop_other_p', models.FloatField(null=True, verbose_name='Other Ethnicity Percentile')),
                ('boundary', models.ManyToManyField(blank=True, to='regions.boundary')),
            ],
        ),
    ]
